# Run constructor after xfel-feedstock finishes

# no continuous integration builds or pull requests
trigger: none
pr: none

resources:
  pipelines:
  - pipeline: xfel_feedstock
    project: 'feedstock-builds'
    source: 'xfel-feedstock'
    trigger:
      enabled: true
      branches: ['main']

jobs:
- job: Construct_xfel_win_installer

  strategy:
    matrix:
      # linux_py39:
      #   vmImage: ubuntu-18.04
      #   platform: Linux
      #   py_ver: 3.9
      #   np_ver: 1.19
      # macOS_py39:
      #   vmImage: macOS-latest
      #   platform: MacOSX
      #   py_ver: 3.9
      #   np_ver: 1.19
      win_py39:
        vmImage: win-latest
        platform: Windows
        py_ver: 3.12
        # np_ver: 1.19

  pool:
    vmImage: windows-latest
  timeoutInMinutes: 360

  # variables for version
  variables:
    year: $(Get-Date -Format yyyy)
    month: $(Get-Date -Format MM)
    day: $(Get-Date -Format dd)
    version: $(year).$(month).$(day)

  steps:

  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: boa.lbl.gov ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAnPOtqyYASs6hc3fsmUQn92ovSozJsMsJyrMWjppUERX1tD4Fh0D7YaNhLvYpKi5mYVREo+tsKoOatCcqKGHCONWpzx7JHXUzfIBsy6nCeygRyyW4yuyoCuYFvOYLkaM4PrN/7XaZEnp1ux6/ZcbRxBDNK4f42svJUV39OX33tRuQWpP+O85paJr1ePHVz6U2n14a+3fRN3DBMti1dJuKOThU4djYEBQimx54pnW71eYORN2oUz+N/4RHAcomtxZpcUMl3Qadw8hD4s1XM6fzJ0Que7KefnnrPOgAEtZxKl9j09aaE70Oh+ie5Y6ckwddJ/4qZB5m2tBaEi3xuy0TSQ==
      sshPublicKey: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA7XgVgdU9GmZuo5yVyW/htrAuxe7ypuq7IowWwfUC0WZw9SPzQ8kOGj63plF3ytx/qpgvUlS1AiywO20rZ83gHmRdAiuvt9laH09KlWEUhIhAQTzesqBG5aUT0MKo01yxijoRl5HC8w/MdOanc0h01e6IxnZvgG0N30RB1i4xVPCtR/VBmXSp4R0T+Q/gJjfQssuBxHVMrrute4V3uUHek58FL2QgUB0+zq6ipETjuCJxTSyYVAFtCYDPYs+0lAYYkWrXALCr9kX9s22jYtkyv5kNw6mEW8nhtA7GbTdJLv4M6/WYtcvQV8TDcNCfltOfl81U3gcZ9zhQDKGVoNaJEw== buildbot@cci.lbl.gov
      sshKeySecureFile: id_rsa
    displayName: Download SSH key

  - task: DownloadSecureFile@1
    name: upload_key
    inputs:
      secureFile: phenix-lbl-4f3f6ca7f212.json

  # set version
  - powershell: |
      $trimmed_month = $(month).TrimStart("0")
      $trimmed_day = $(day).TrimStart("0")
      Write-Host $trimmed_month
      Write-Host $trimmed_day
      Write-Host "##vso[task.setVariable variable=year]$(year)"
      Write-Host "##vso[task.setVariable variable=month]$trimmed_month"
      Write-Host "##vso[task.setVariable variable=day]$trimmed_day"
      Write-Host $(year)
      Write-Host $(month)
      Write-Host $(day)
    displayName: Set variables from date

  - powershell:  |
      $version = $(year).$(month).$(day)
      Write-Host "##vso[task.setVariable variable=version]$version"
      Write-Host $(version)
    displayName: Set version

  # - script: |
  #     set -xe
  #     release=`echo $(Build.SourceBranch) | sed 's/refs\/heads\/releases\///'`
  #     echo "##vso[task.setVariable variable=version]$release"
  #     echo $(version)
  #   displayName: Override version for release branch
  #   condition: startswith(variables['Build.SourceBranch'], 'refs/heads/releases/')

  # download sources
  - checkout: self

  # not sure why version is not set correctly
  - powershell: |
      cd constructor
      python3 update_version.py --version $(year).$(month).$(day)
    displayName: Update version

  # add conda to path
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/anaconda?view=azure-devops&tabs=windows#add-conda-to-your-system-path
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  # set up constructor environment
  - script: |
      conda create -n construct -y -c conda-forge constructor
    displayName: Set up constructor environment

  # patch constructor to avoid check
  # - script: |
  #     set -xe
  #     cd constructor
  #     python3 patch_fcp.py --site-packages ${CONDA}/envs/construct/lib/python3.9/site-packages
  #   displayName: Patch constructor

  - script: |
      call activate construct
      cd constructor
      constructor .
      dir
    displayName: Create installer

  # publish artifact
  - publish: ./constructor/cctbx.xfel-$(year).$(month).$(day)-$(platform)-x86_64.exe
    artifact: $(platform)-installer

  # upload installer to Google Drive
  - script: |
      call conda create -n upload -y -c conda-forge mamba python=3.9 pydrive2 libboost libboost-python tabulate tqdm
      call activate upload
      mamba install -y -c xfel -c conda-forge --no-deps cctbx.xfel

      cd constructor
      libtbx.python ./upload_installer.py ^
        --credentials $(upload_key.secureFilePath) ^
        --folder_id 1DVRkUc_nlS4i19zyI7OVdUcHcTI50YTz ^
        --folder_list $(year).$(month).$(day) ^
        --files ./cctbx.xfel-$(year).$(month).$(day)-$(platform)-x86_64.exe
    displayName: Upload installer to Google Drive
